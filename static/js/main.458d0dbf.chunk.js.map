{"version":3,"sources":["components/TodoList/todosSlice.js","components/Todo/index.js","redux/selectors.js","components/TodoList/index.js","components/Filters/filtersSlice.js","components/Filters/index.js","App.js","redux/store.js","index.js"],"names":["todosSlice","createSlice","name","initialState","status","todos","reducers","addTodo","state","action","push","payload","toggleTodoStatus","currentTodo","find","todo","id","completed","extraReducers","builder","addCase","fetchTodos","pending","fulfilled","console","log","addNewTodo","updateTodo","createAsyncThunk","a","fetch","res","json","data","newTodo","method","body","JSON","stringify","updatedTodo","priorityColorMapping","High","Medium","Low","Todo","prioriry","dispatch","useDispatch","useState","checked","setChecked","justify","style","marginBottom","opacity","textDecoration","onChange","color","margin","todosRemainingSelector","createSelector","todoList","filters","search","priorities","searchText","filter","length","includes","priority","TodoList","todoName","setTodoName","setPriority","useSelector","height","span","overflowY","map","Group","display","compact","value","e","target","defaultValue","Option","label","type","onClick","uuidv4","searchFilterChange","statusFilterChange","prioritiesFilterChange","Search","Input","Filters","setSearchText","filterStatus","setFilterStatus","filterPriorities","setFilterPriorities","Paragraph","fontWeight","marginTop","placeholder","filtersSlice","actions","sm","mode","allowClear","width","Title","Typography","App","useEffect","flexDirection","backgroundColor","padding","boxShadow","borderRadius","textAlign","store","configureStore","reducer","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.458d0dbf.chunk.js","sourcesContent":["// const initState = [\r\n//   { id: 1, name: 'Learn Yoga', completed: false, priority: 'Medium' },\r\n//   { id: 2, name: 'Learn Redux', completed: true, priority: 'High' },\r\n//   { id: 3, name: 'Learn JavaScript', completed: false, priority: 'Low' },\r\n// ];\r\n\r\n// const todoListReducer = (state = initState, action) => {\r\n//   switch (action.type) {\r\n//     case 'todoList/addTodo':\r\n//       return [...state, action.payload];\r\n\r\n//     case 'todoList/toggleTodoStatus':\r\n//       return state.map((todo) =>\r\n//         todo.id === action.payload\r\n//           ? { ...todo, completed: !todo.completed }\r\n//           : todo\r\n//       );\r\n//     default:\r\n//       return state;\r\n//   }\r\n// };\r\n\r\n// export default todoListReducer;\r\n\r\nimport { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\r\n\r\nconst todosSlice = createSlice({\r\n  name: 'todoList',\r\n  initialState: { status: 'idle', todos: [] },\r\n  reducers: {\r\n    // IMMER\r\n    addTodo: (state, action) => {\r\n      state.push(action.payload);\r\n    }, // action creators\r\n    toggleTodoStatus: (state, action) => {\r\n      const currentTodo = state.find((todo) => todo.id === action.payload);\r\n      if (currentTodo) {\r\n        currentTodo.completed = !currentTodo.completed;\r\n      }\r\n    },\r\n  },\r\n  extraReducers: (builder) => {\r\n    builder\r\n      .addCase(fetchTodos.pending, (state, action) => {\r\n        state.status = 'loading';\r\n      })\r\n      .addCase(fetchTodos.fulfilled, (state, action) => {\r\n        console.log({ action });\r\n        state.todos = action.payload;\r\n        state.status = 'idle';\r\n      })\r\n      .addCase(addNewTodo.fulfilled, (state, action) => {\r\n        state.todos.push(action.payload);\r\n      })\r\n      .addCase(updateTodo.fulfilled, (state, action) => {\r\n        let currentTodo = state.todos.find((todo) => todo.id === action.payload);\r\n        currentTodo = action.payload;\r\n      });\r\n  },\r\n});\r\n\r\nexport const fetchTodos = createAsyncThunk('todos/fetchTodos', async () => {\r\n  const res = await fetch('/api/todos');\r\n  const data = await res.json();\r\n  return data.todos;\r\n});\r\n\r\nexport const addNewTodo = createAsyncThunk(\r\n  'todos/addNewTodo',\r\n  async (newTodo) => {\r\n    const res = await fetch('/api/todos', {\r\n      method: 'POST',\r\n      body: JSON.stringify(newTodo),\r\n    });\r\n    const data = await res.json();\r\n    console.log({ data });\r\n    return data.todos;\r\n  }\r\n);\r\n\r\nexport const updateTodo = createAsyncThunk(\r\n  'todos/updateTodo',\r\n  async (updatedTodo) => {\r\n    const res = await fetch('/api/updateTodo', {\r\n      method: 'POST',\r\n      body: JSON.stringify(updatedTodo),\r\n    });\r\n\r\n    const data = await res.json();\r\n    console.log('[updateTodo]', {data})\r\n    return data.todos;\r\n  }\r\n);\r\n\r\n/*\r\n  => todos/fetchTodos/pending\r\n  => todos/fetchTodos/fullfilled\r\n  => todos/fetchTodos/rejected\r\n*/\r\n\r\nexport default todosSlice;\r\n\r\n// action (object) va action creators () => { return action }\r\n// thunk action (function) va thunk action creators () => { return thunk action  }\r\n\r\n// export function addTodos(todo) { // thunk function - thunk action\r\n//   return function addTodosThunk(dispatch, getState) {\r\n//     console.log('[addTodosThunk]', getState());\r\n//     console.log({todo});\r\n//     // custom\r\n//     todo.name = 'Tung Test Updated';\r\n//     dispatch(todosSlice.actions.addTodo(todo));\r\n\r\n//     console.log('[addTodosThunk after]', getState())\r\n//   }\r\n// }\r\n","import { Row, Tag, Checkbox } from 'antd';\r\nimport { useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\n// import { toggleTodoStatus } from '../../redux/actions';\r\nimport todoListSlice, { updateTodo } from '../TodoList/todosSlice';\r\n\r\nconst priorityColorMapping = {\r\n  High: 'red',\r\n  Medium: 'blue',\r\n  Low: 'gray',\r\n};\r\n\r\nexport default function Todo({ name, prioriry, completed, id }) {\r\n  const dispatch = useDispatch();\r\n\r\n  const [checked, setChecked] = useState(completed);\r\n\r\n  const toggleCheckbox = () => {\r\n    setChecked(!checked);\r\n    // dispatch(todoListSlice.actions.toggleTodoStatus(id));\r\n\r\n    dispatch(updateTodo(id));\r\n  };\r\n\r\n  return (\r\n    <Row\r\n      justify='space-between'\r\n      style={{\r\n        marginBottom: 3,\r\n        ...(checked ? { opacity: 0.5, textDecoration: 'line-through' } : {}),\r\n      }}\r\n    >\r\n      <Checkbox checked={checked} onChange={toggleCheckbox}>\r\n        {name}\r\n      </Checkbox>\r\n      <Tag color={priorityColorMapping[prioriry]} style={{ margin: 0 }}>\r\n        {prioriry}\r\n      </Tag>\r\n    </Row>\r\n  );\r\n}\r\n","import { createSelector } from '@reduxjs/toolkit';\r\n\r\nexport const searchTextSelector = (state) => state.filters.search;\r\nexport const filterStatusSelector = (state) => state.filters.status;\r\nexport const filterPrioritiesSelector = (state) => state.filters.priorities;\r\nexport const todoListSelector = (state) => state.todoList.todos;\r\n\r\nexport const todosRemainingSelector = createSelector(\r\n  todoListSelector,\r\n  filterStatusSelector,\r\n  searchTextSelector,\r\n  filterPrioritiesSelector,\r\n  (todoList, status, searchText, priorities) => {\r\n    return todoList.filter((todo) => {\r\n      if (status === 'All') {\r\n        return priorities.length\r\n          ? todo.name.includes(searchText) && priorities.includes(todo.priority)\r\n          : todo.name.includes(searchText);\r\n      }\r\n\r\n      return (\r\n        todo.name.includes(searchText) &&\r\n        (status === 'Completed' ? todo.completed : !todo.completed) &&\r\n        (priorities.length ? priorities.includes(todo.priority) : true)\r\n      );\r\n    });\r\n  }\r\n);\r\n","import { Col, Row, Input, Button, Select, Tag } from 'antd';\r\nimport Todo from '../Todo';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n// import { addTodo } from '../../redux/actions';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport { useState } from 'react';\r\nimport { todosRemainingSelector } from '../../redux/selectors';\r\nimport todoListSlice, { addNewTodo, addTodos } from './todosSlice';\r\n\r\nexport default function TodoList() {\r\n  const [todoName, setTodoName] = useState('');\r\n  const [priority, setPriority] = useState('Medium');\r\n\r\n  const todoList = useSelector(todosRemainingSelector);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const handleAddButtonClick = () => {\r\n    // dispatch(\r\n    //   todoListSlice.actions.addTodo({\r\n    //     id: uuidv4(),\r\n    //     name: todoName,\r\n    //     priority: priority,\r\n    //     completed: false,\r\n    //   })\r\n    // );\r\n    dispatch(\r\n      addNewTodo({\r\n        id: uuidv4(),\r\n        name: todoName,\r\n        priority: priority,\r\n        completed: false,\r\n      })\r\n    );\r\n    // dispatch(\r\n    //   addTodos({\r\n    //     id: uuidv4(),\r\n    //     name: todoName,\r\n    //     priority: priority,\r\n    //     completed: false,\r\n    //   })\r\n    // );\r\n\r\n    setTodoName('');\r\n    setPriority('Medium');\r\n  };\r\n\r\n  const handleInputChange = (e) => {\r\n    console.log('handleInputChange', e.target.value);\r\n    setTodoName(e.target.value);\r\n  };\r\n\r\n  const handlePriorityChange = (value) => {\r\n    setPriority(value);\r\n  };\r\n\r\n  return (\r\n    <Row style={{ height: 'calc(100% - 40px)' }}>\r\n      <Col span={24} style={{ height: 'calc(100% - 40px)', overflowY: 'auto' }}>\r\n        {todoList.map((todo) => (\r\n          <Todo\r\n            key={todo.id}\r\n            id={todo.id}\r\n            name={todo.name}\r\n            prioriry={todo.priority}\r\n            completed={todo.completed}\r\n          />\r\n        ))}\r\n      </Col>\r\n      <Col span={24}>\r\n        <Input.Group style={{ display: 'flex' }} compact>\r\n          <Input value={todoName} onChange={handleInputChange} />\r\n          <Select\r\n            defaultValue='Medium'\r\n            value={priority}\r\n            onChange={handlePriorityChange}\r\n          >\r\n            <Select.Option value='High' label='High'>\r\n              <Tag color='red'>High</Tag>\r\n            </Select.Option>\r\n            <Select.Option value='Medium' label='Medium'>\r\n              <Tag color='blue'>Medium</Tag>\r\n            </Select.Option>\r\n            <Select.Option value='Low' label='Low'>\r\n              <Tag color='gray'>Low</Tag>\r\n            </Select.Option>\r\n          </Select>\r\n          <Button type='primary' onClick={handleAddButtonClick}>\r\n            Add\r\n          </Button>\r\n        </Input.Group>\r\n      </Col>\r\n    </Row>\r\n  );\r\n}\r\n","// const initState = {\r\n//   search: '',\r\n//   status: 'All',\r\n//   priorities: [],\r\n// };\r\n\r\n// const filtersReducer = (state = initState, action) => {\r\n//   switch (action.type) {\r\n//     case 'filters/searchFilterChange':\r\n//       return {\r\n//         ...state,\r\n//         search: action.payload,\r\n//       };\r\n\r\n//     case 'filters/statusFilterChange':\r\n//       return {\r\n//         ...state,\r\n//         status: action.payload\r\n//       }\r\n\r\n//     case 'filters/prioritiesFilterChange':\r\n//       return {\r\n//         ...state,\r\n//         priorities: action.payload\r\n//       }\r\n//     default:\r\n//       return state;\r\n//   }\r\n// };\r\n\r\n// export default filtersReducer;\r\n\r\nimport { createSlice } from '@reduxjs/toolkit';\r\n\r\nexport default createSlice({\r\n  name: 'filters',\r\n  initialState: {\r\n    search: '',\r\n    status: 'All',\r\n    priorities: [],\r\n  },\r\n  reducers: {\r\n    searchFilterChange: (state, action) => {\r\n      // mutation || IMMER\r\n      state.search = action.payload;\r\n    },\r\n    statusFilterChange: (state, action) => {\r\n      state.status = action.payload;\r\n    },\r\n    prioritiesFilterChange: (state, action) => {\r\n      state.priorities = action.payload;\r\n    },\r\n  },\r\n});\r\n/**\r\n * => (payload) => {\r\n *  return {\r\n *    type: 'filters/searchFilterChange',\r\n *    payload: payload\r\n *  }\r\n * }\r\n * \r\n * \r\n * \r\n * => {\r\n *  reducer,\r\n *  actions\r\n * }\r\n * action => object\r\n * \r\n * {\r\n *  type: 'abc',\r\n *  payload: value\r\n * }\r\n * \r\n * action creator => function :  () => {\r\n *  return {\r\n *    type: 'abc',\r\n *    payload: value\r\n * }\r\n * }\r\n*/\r\n","import { Col, Row, Input, Typography, Radio, Select, Tag } from 'antd';\r\nimport { useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\n// import { priorityFilterChange, searchFilterChange, statusFilterChange } from '../../redux/actions';\r\nimport filtersSlice from './filtersSlice';\r\n\r\nconst { Search } = Input;\r\n\r\nexport default function Filters() {\r\n  const dispatch = useDispatch();\r\n\r\n  const [searchText, setSearchText] = useState('');\r\n  const [filterStatus, setFilterStatus] = useState('All');\r\n  const [filterPriorities, setFilterPriorities] = useState([]);\r\n\r\n  const handleSearchTextChange = (e) => {\r\n    setSearchText(e.target.value);\r\n    dispatch(filtersSlice.actions.searchFilterChange(e.target.value));\r\n  };\r\n\r\n  const handleStatusChange = (e) => {\r\n    setFilterStatus(e.target.value);\r\n    dispatch(filtersSlice.actions.statusFilterChange(e.target.value));\r\n  };\r\n\r\n  const handlePriorityChange = (value) => {\r\n    setFilterPriorities(value);\r\n    dispatch(filtersSlice.actions.prioritiesFilterChange(value));\r\n  }\r\n\r\n  return (\r\n    <Row justify='center'>\r\n      <Col span={24}>\r\n        <Typography.Paragraph\r\n          style={{ fontWeight: 'bold', marginBottom: 3, marginTop: 10 }}\r\n        >\r\n          Search\r\n        </Typography.Paragraph>\r\n        <Search\r\n          placeholder='input search text'\r\n          value={searchText}\r\n          onChange={handleSearchTextChange}\r\n        />\r\n      </Col>\r\n      <Col sm={24}>\r\n        <Typography.Paragraph\r\n          style={{ fontWeight: 'bold', marginBottom: 3, marginTop: 10 }}\r\n        >\r\n          Filter By Status\r\n        </Typography.Paragraph>\r\n        <Radio.Group value={filterStatus} onChange={handleStatusChange}>\r\n          <Radio value='All'>All</Radio>\r\n          <Radio value='Completed'>Completed</Radio>\r\n          <Radio value='Todo'>To do</Radio>\r\n        </Radio.Group>\r\n      </Col>\r\n      <Col sm={24}>\r\n        <Typography.Paragraph\r\n          style={{ fontWeight: 'bold', marginBottom: 3, marginTop: 10 }}\r\n        >\r\n          Filter By Priority\r\n        </Typography.Paragraph>\r\n        <Select\r\n          mode='multiple'\r\n          allowClear\r\n          placeholder='Please select'\r\n          style={{ width: '100%' }}\r\n          value={filterPriorities}\r\n          onChange={handlePriorityChange}\r\n        >\r\n          <Select.Option value='High' label='High'>\r\n            <Tag color='red'>High</Tag>\r\n          </Select.Option>\r\n          <Select.Option value='Medium' label='Medium'>\r\n            <Tag color='blue'>Medium</Tag>\r\n          </Select.Option>\r\n          <Select.Option value='Low' label='Low'>\r\n            <Tag color='gray'>Low</Tag>\r\n          </Select.Option>\r\n        </Select>\r\n      </Col>\r\n    </Row>\r\n  );\r\n}\r\n","import { Typography, Divider } from 'antd';\nimport './App.css';\nimport TodoList from './components/TodoList';\nimport Filters from './components/Filters';\nimport { setupServer } from './fakeApis';\nimport { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { fetchTodos } from './components/TodoList/todosSlice';\n\nif (process.env.NODE_ENV === 'development') {\n  setupServer();\n}\n\nconst { Title } = Typography;\n\nfunction App() {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchTodos());\n  }, [])\n\n  return (\n    <div\n      style={{\n        width: 500,\n        margin: '0 auto',\n        display: 'flex',\n        flexDirection: 'column',\n        backgroundColor: 'white',\n        padding: 20,\n        boxShadow: '0 0 10px 4px #bfbfbf',\n        borderRadius: 5,\n        height: '90vh',\n      }}\n    >\n      <Title style={{ textAlign: 'center' }}>TODO APP with REDUX</Title>\n      <Filters />\n      <Divider />\n      <TodoList />\n    </div>\n  );\n}\n\nexport default App;\n","// import { createStore } from 'redux';\r\n// import rootReducer from './reducer';\r\n// import { composeWithDevTools } from 'redux-devtools-extension';\r\n\r\n// const composedEnhancers = composeWithDevTools();\r\n\r\n// const store = createStore(rootReducer, composedEnhancers);\r\n\r\n// export default store;\r\n\r\nimport { configureStore } from '@reduxjs/toolkit';\r\nimport filtersSlice from '../components/Filters/filtersSlice';\r\nimport todosSlice from '../components/TodoList/todosSlice';\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    filters: filtersSlice.reducer,\r\n    todoList: todosSlice.reducer,\r\n  },\r\n});\r\n\r\nexport default store;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport store from './redux/store';\nimport { Provider } from 'react-redux';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}